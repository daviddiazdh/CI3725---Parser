
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftTkOrleftTkAndleftTkEqualTkNEqualnonassocTkLessTkLeqTkGreaterTkGeqleftTkPlusTkMinusleftTkMultnonassocTkApprightTkNotrightUMinusTkAnd TkApp TkArrow TkAsig TkBool TkCBlock TkCBracket TkClosePar TkComma TkEnd TkEqual TkFalse TkFi TkFunction TkGeq TkGreater TkGuard TkId TkIf TkInt TkLeq TkLess TkMinus TkMult TkNEqual TkNot TkNum TkOBlock TkOBracket TkOpenPar TkOr TkPlus TkPrint TkSemicolon TkSkip TkSoForth TkString TkTrue TkTwoPoints TkWhileprogram : TkOBlock declaration_list TkSemicolon statement_list TkCBlock\n                | TkOBlock statement_list TkCBlockdeclaration_list : declaration_list TkSemicolon declaration\n                        | declarationdeclaration : TkInt variable_list\n                    | TkBool variable_listdeclaration : TkFunction TkOBracket TkSoForth TkNum TkCBracket variable_listvariable_list : variable_list TkComma variable\n                        | variablevariable : TkIdstatement_list : statement_list TkSemicolon statement\n                        | statementstatement : TkId TkAsig expression\n                    | TkId TkAsig expression_list\n                    | TkId TkAsig function_modstatement : TkIf if_body TkFiif_body : if_body TkGuard expression TkArrow statement_list\n                | expression TkArrow statement_liststatement : TkWhile expression TkArrow statement_list TkEndstatement : TkPrint expression\n                | TkPrint stringstatement : TkSkipstring : string TkPlus string\n                | string TkPlus expression\n                | expression TkPlus stringstring : TkStringstring : TkOpenPar TkString TkCloseParstatement : programexpression_list : expression_list TkComma expression\n                        | expression TkComma expressionexpression : expression TkPlus expression\n                    | expression TkMinus expression\n                    | expression TkMult expression\n                    | expression TkAnd expression\n                    | expression TkOr expression\n                    | expression TkEqual expression\n                    | expression TkNEqual expression\n                    | TkNot expression\n                    | TkMinus expression %prec UMinus\n                    | expression TkLess expression\n                    | expression TkGreater expression\n                    | expression TkLeq expression\n                    | expression TkGeq expressionexpression : TkId TkApp expressionexpression : function_mod TkApp expressionfunction_mod : function_mod TkOpenPar two_points TkCloseParfunction_mod : TkId TkOpenPar two_points TkClosePartwo_points : expression TkTwoPoints expressionexpression : TkNumexpression : TkIdexpression : TkOpenPar expression TkCloseParexpression : TkTrue\n                    | TkFalse'
    
_lr_action_items = {'TkOBlock':([0,2,16,18,50,69,107,],[2,2,2,2,2,2,2,]),'$end':([1,17,73,],[0,-2,-1,]),'TkInt':([2,16,],[7,7,]),'TkBool':([2,16,],[8,8,]),'TkFunction':([2,16,],[9,9,]),'TkId':([2,7,8,11,12,13,16,18,24,27,28,32,38,43,49,50,51,52,53,54,55,56,57,58,59,60,61,64,65,66,67,69,70,71,76,77,102,104,107,109,112,],[10,21,21,29,29,29,10,10,29,29,29,29,29,21,29,10,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,10,29,29,29,29,29,21,10,29,29,]),'TkIf':([2,16,18,50,69,107,],[11,11,11,11,11,11,]),'TkWhile':([2,16,18,50,69,107,],[12,12,12,12,12,12,]),'TkPrint':([2,16,18,50,69,107,],[13,13,13,13,13,13,]),'TkSkip':([2,16,18,50,69,107,],[14,14,14,14,14,14,]),'TkSemicolon':([3,4,5,6,14,15,17,19,20,21,22,29,31,33,34,36,37,39,40,41,42,45,46,47,48,62,63,73,74,79,80,81,82,83,84,85,86,87,88,89,90,91,94,96,97,98,99,100,101,103,105,106,108,110,111,113,114,116,],[16,18,-4,-12,-22,-28,-2,-5,-9,-10,-6,-50,-49,-52,-53,-20,-21,-26,18,-3,-11,-13,-14,-15,-16,-39,-38,-1,-8,18,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-43,-44,-45,-51,18,-31,-25,-23,-24,-27,-30,-29,-47,-46,-19,-7,18,-31,]),'TkCBlock':([4,6,14,15,17,29,31,33,34,36,37,39,40,42,45,46,47,48,62,63,73,80,81,82,83,84,85,86,87,88,89,90,91,94,96,98,99,100,101,103,105,106,108,110,111,116,],[17,-12,-22,-28,-2,-50,-49,-52,-53,-20,-21,-26,73,-11,-13,-14,-15,-16,-39,-38,-1,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-43,-44,-45,-51,-31,-25,-23,-24,-27,-30,-29,-47,-46,-19,-31,]),'TkFi':([6,14,15,17,25,29,31,33,34,36,37,39,42,45,46,47,48,62,63,73,79,80,81,82,83,84,85,86,87,88,89,90,91,94,96,98,99,100,101,103,105,106,108,110,111,114,116,],[-12,-22,-28,-2,48,-50,-49,-52,-53,-20,-21,-26,-11,-13,-14,-15,-16,-39,-38,-1,-18,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-43,-44,-45,-51,-31,-25,-23,-24,-27,-30,-29,-47,-46,-19,-17,-31,]),'TkGuard':([6,14,15,17,25,29,31,33,34,36,37,39,42,45,46,47,48,62,63,73,79,80,81,82,83,84,85,86,87,88,89,90,91,94,96,98,99,100,101,103,105,106,108,110,111,114,116,],[-12,-22,-28,-2,49,-50,-49,-52,-53,-20,-21,-26,-11,-13,-14,-15,-16,-39,-38,-1,-18,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-43,-44,-45,-51,-31,-25,-23,-24,-27,-30,-29,-47,-46,-19,-17,-31,]),'TkEnd':([6,14,15,17,29,31,33,34,36,37,39,42,45,46,47,48,62,63,73,80,81,82,83,84,85,86,87,88,89,90,91,94,96,97,98,99,100,101,103,105,106,108,110,111,116,],[-12,-22,-28,-2,-50,-49,-52,-53,-20,-21,-26,-11,-13,-14,-15,-16,-39,-38,-1,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-43,-44,-45,-51,111,-31,-25,-23,-24,-27,-30,-29,-47,-46,-19,-31,]),'TkOBracket':([9,],[23,]),'TkAsig':([10,],[24,]),'TkNot':([11,12,13,24,27,28,32,38,49,51,52,53,54,55,56,57,58,59,60,61,64,65,66,67,70,71,76,77,102,109,112,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'TkMinus':([11,12,13,24,26,27,28,29,31,32,33,34,35,36,38,45,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,98,101,102,105,106,109,112,115,116,],[27,27,27,27,52,27,27,-50,-49,27,-52,-53,52,52,27,52,27,27,27,27,27,27,27,27,27,27,27,27,-39,-38,27,27,27,27,52,27,27,27,27,52,-31,-32,-33,52,52,52,52,52,52,52,52,-44,52,-45,-51,-31,52,27,52,52,27,27,52,-31,]),'TkNum':([11,12,13,24,27,28,32,38,44,49,51,52,53,54,55,56,57,58,59,60,61,64,65,66,67,70,71,76,77,102,109,112,],[31,31,31,31,31,31,31,31,75,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'TkOpenPar':([11,12,13,24,27,28,29,30,32,38,47,49,51,52,53,54,55,56,57,58,59,60,61,64,65,66,67,70,71,76,77,102,108,109,110,112,],[32,32,38,32,32,32,65,67,32,32,67,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,38,102,32,32,32,-47,32,-46,102,]),'TkTrue':([11,12,13,24,27,28,32,38,49,51,52,53,54,55,56,57,58,59,60,61,64,65,66,67,70,71,76,77,102,109,112,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'TkFalse':([11,12,13,24,27,28,32,38,49,51,52,53,54,55,56,57,58,59,60,61,64,65,66,67,70,71,76,77,102,109,112,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'TkString':([13,38,70,71,102,112,],[39,72,39,39,72,39,]),'TkComma':([19,20,21,22,29,31,33,34,45,46,62,63,74,80,81,82,83,84,85,86,87,88,89,90,91,94,96,105,106,113,],[43,-9,-10,43,-50,-49,-52,-53,76,77,-39,-38,-8,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-43,-44,-45,-51,-30,-29,43,]),'TkSoForth':([23,],[44,]),'TkArrow':([26,29,31,33,34,35,62,63,78,80,81,82,83,84,85,86,87,88,89,90,91,94,96,],[50,-50,-49,-52,-53,69,-39,-38,107,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-43,-44,-45,-51,]),'TkPlus':([26,29,31,33,34,35,36,37,39,45,62,63,68,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,98,99,100,101,103,105,106,115,116,],[51,-50,-49,-52,-53,51,70,71,-26,51,-39,-38,51,51,-31,-32,-33,51,51,51,51,51,51,51,51,-44,51,-45,-51,-31,-25,-23,-24,-27,51,51,51,-31,]),'TkMult':([26,29,31,33,34,35,36,45,62,63,68,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,98,101,105,106,115,116,],[53,-50,-49,-52,-53,53,53,53,-39,-38,53,53,53,53,-33,53,53,53,53,53,53,53,53,-44,53,-45,-51,53,53,53,53,53,53,]),'TkAnd':([26,29,31,33,34,35,36,45,62,63,68,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,98,101,105,106,115,116,],[54,-50,-49,-52,-53,54,54,54,-39,-38,54,54,-31,-32,-33,-34,54,-36,-37,-40,-41,-42,-43,-44,54,-45,-51,-31,54,54,54,54,-31,]),'TkOr':([26,29,31,33,34,35,36,45,62,63,68,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,98,101,105,106,115,116,],[55,-50,-49,-52,-53,55,55,55,-39,-38,55,55,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-43,-44,55,-45,-51,-31,55,55,55,55,-31,]),'TkEqual':([26,29,31,33,34,35,36,45,62,63,68,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,98,101,105,106,115,116,],[56,-50,-49,-52,-53,56,56,56,-39,-38,56,56,-31,-32,-33,56,56,-36,-37,-40,-41,-42,-43,-44,56,-45,-51,-31,56,56,56,56,-31,]),'TkNEqual':([26,29,31,33,34,35,36,45,62,63,68,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,98,101,105,106,115,116,],[57,-50,-49,-52,-53,57,57,57,-39,-38,57,57,-31,-32,-33,57,57,-36,-37,-40,-41,-42,-43,-44,57,-45,-51,-31,57,57,57,57,-31,]),'TkLess':([26,29,31,33,34,35,36,45,62,63,68,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,98,101,105,106,115,116,],[58,-50,-49,-52,-53,58,58,58,-39,-38,58,58,-31,-32,-33,58,58,58,58,None,None,None,None,-44,58,-45,-51,-31,58,58,58,58,-31,]),'TkGreater':([26,29,31,33,34,35,36,45,62,63,68,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,98,101,105,106,115,116,],[59,-50,-49,-52,-53,59,59,59,-39,-38,59,59,-31,-32,-33,59,59,59,59,None,None,None,None,-44,59,-45,-51,-31,59,59,59,59,-31,]),'TkLeq':([26,29,31,33,34,35,36,45,62,63,68,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,98,101,105,106,115,116,],[60,-50,-49,-52,-53,60,60,60,-39,-38,60,60,-31,-32,-33,60,60,60,60,None,None,None,None,-44,60,-45,-51,-31,60,60,60,60,-31,]),'TkGeq':([26,29,31,33,34,35,36,45,62,63,68,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,98,101,105,106,115,116,],[61,-50,-49,-52,-53,61,61,61,-39,-38,61,61,-31,-32,-33,61,61,61,61,None,None,None,None,-44,61,-45,-51,-31,61,61,61,61,-31,]),'TkApp':([29,30,47,108,110,],[64,66,66,-47,-46,]),'TkClosePar':([29,31,33,34,62,63,68,72,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,115,],[-50,-49,-52,-53,-39,-38,96,103,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-43,-44,108,-45,110,-51,-48,]),'TkTwoPoints':([29,31,33,34,62,63,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,],[-50,-49,-52,-53,-39,-38,-31,-32,-33,-34,-35,-36,-37,-40,-41,-42,-43,-44,109,-45,-51,]),'TkCBracket':([75,],[104,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,16,18,50,69,107,],[1,15,15,15,15,15,15,]),'declaration_list':([2,],[3,]),'statement_list':([2,16,50,69,107,],[4,40,79,97,114,]),'declaration':([2,16,],[5,41,]),'statement':([2,16,18,50,69,107,],[6,6,42,6,6,6,]),'variable_list':([7,8,104,],[19,22,113,]),'variable':([7,8,43,104,],[20,20,74,20,]),'if_body':([11,],[25,]),'expression':([11,12,13,24,27,28,32,38,49,51,52,53,54,55,56,57,58,59,60,61,64,65,66,67,70,71,76,77,102,109,112,],[26,35,36,45,62,63,68,68,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,93,98,101,105,106,68,115,116,]),'function_mod':([11,12,13,24,27,28,32,38,49,51,52,53,54,55,56,57,58,59,60,61,64,65,66,67,70,71,76,77,102,109,112,],[30,30,30,47,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'string':([13,70,71,112,],[37,99,100,99,]),'expression_list':([24,],[46,]),'two_points':([65,67,],[92,95,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> TkOBlock declaration_list TkSemicolon statement_list TkCBlock','program',5,'p_program','parser.py',40),
  ('program -> TkOBlock statement_list TkCBlock','program',3,'p_program','parser.py',41),
  ('declaration_list -> declaration_list TkSemicolon declaration','declaration_list',3,'p_declaration_list','parser.py',50),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',51),
  ('declaration -> TkInt variable_list','declaration',2,'p_declaration','parser.py',59),
  ('declaration -> TkBool variable_list','declaration',2,'p_declaration','parser.py',60),
  ('declaration -> TkFunction TkOBracket TkSoForth TkNum TkCBracket variable_list','declaration',6,'p_declaration_function','parser.py',65),
  ('variable_list -> variable_list TkComma variable','variable_list',3,'p_variable_list','parser.py',70),
  ('variable_list -> variable','variable_list',1,'p_variable_list','parser.py',71),
  ('variable -> TkId','variable',1,'p_variable','parser.py',79),
  ('statement_list -> statement_list TkSemicolon statement','statement_list',3,'p_statement_list','parser.py',84),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',85),
  ('statement -> TkId TkAsig expression','statement',3,'p_statement_asig','parser.py',93),
  ('statement -> TkId TkAsig expression_list','statement',3,'p_statement_asig','parser.py',94),
  ('statement -> TkId TkAsig function_mod','statement',3,'p_statement_asig','parser.py',95),
  ('statement -> TkIf if_body TkFi','statement',3,'p_statement_if','parser.py',100),
  ('if_body -> if_body TkGuard expression TkArrow statement_list','if_body',5,'p_if_body','parser.py',105),
  ('if_body -> expression TkArrow statement_list','if_body',3,'p_if_body','parser.py',106),
  ('statement -> TkWhile expression TkArrow statement_list TkEnd','statement',5,'p_statement_while','parser.py',114),
  ('statement -> TkPrint expression','statement',2,'p_statement_print','parser.py',119),
  ('statement -> TkPrint string','statement',2,'p_statement_print','parser.py',120),
  ('statement -> TkSkip','statement',1,'p_statement_skip','parser.py',125),
  ('string -> string TkPlus string','string',3,'p_string_binop','parser.py',130),
  ('string -> string TkPlus expression','string',3,'p_string_binop','parser.py',131),
  ('string -> expression TkPlus string','string',3,'p_string_binop','parser.py',132),
  ('string -> TkString','string',1,'p_string','parser.py',136),
  ('string -> TkOpenPar TkString TkClosePar','string',3,'p_string_parenthesis','parser.py',141),
  ('statement -> program','statement',1,'p_statement_program','parser.py',146),
  ('expression_list -> expression_list TkComma expression','expression_list',3,'p_expression_list','parser.py',151),
  ('expression_list -> expression TkComma expression','expression_list',3,'p_expression_list','parser.py',152),
  ('expression -> expression TkPlus expression','expression',3,'p_expression_binop','parser.py',158),
  ('expression -> expression TkMinus expression','expression',3,'p_expression_binop','parser.py',159),
  ('expression -> expression TkMult expression','expression',3,'p_expression_binop','parser.py',160),
  ('expression -> expression TkAnd expression','expression',3,'p_expression_binop','parser.py',161),
  ('expression -> expression TkOr expression','expression',3,'p_expression_binop','parser.py',162),
  ('expression -> expression TkEqual expression','expression',3,'p_expression_binop','parser.py',163),
  ('expression -> expression TkNEqual expression','expression',3,'p_expression_binop','parser.py',164),
  ('expression -> TkNot expression','expression',2,'p_expression_binop','parser.py',165),
  ('expression -> TkMinus expression','expression',2,'p_expression_binop','parser.py',166),
  ('expression -> expression TkLess expression','expression',3,'p_expression_binop','parser.py',167),
  ('expression -> expression TkGreater expression','expression',3,'p_expression_binop','parser.py',168),
  ('expression -> expression TkLeq expression','expression',3,'p_expression_binop','parser.py',169),
  ('expression -> expression TkGeq expression','expression',3,'p_expression_binop','parser.py',170),
  ('expression -> TkId TkApp expression','expression',3,'p_expression_app','parser.py',200),
  ('expression -> function_mod TkApp expression','expression',3,'p_expression_function_app','parser.py',204),
  ('function_mod -> function_mod TkOpenPar two_points TkClosePar','function_mod',4,'p_function_mod','parser.py',208),
  ('function_mod -> TkId TkOpenPar two_points TkClosePar','function_mod',4,'p_function_mod_base','parser.py',213),
  ('two_points -> expression TkTwoPoints expression','two_points',3,'p_two_points','parser.py',218),
  ('expression -> TkNum','expression',1,'p_expression_num','parser.py',223),
  ('expression -> TkId','expression',1,'p_expression_id','parser.py',228),
  ('expression -> TkOpenPar expression TkClosePar','expression',3,'p_expression_parens','parser.py',233),
  ('expression -> TkTrue','expression',1,'p_expression_def','parser.py',238),
  ('expression -> TkFalse','expression',1,'p_expression_def','parser.py',239),
]
